# -*- coding: utf-8 -*-
"""Data Analysis Colab Intro

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qTrjErDlybDyOsoqZ-aEBa-C2uX-jVyN
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

piston_data = pd.read_excel('/content/drive/MyDrive/Work 2/5to Semestre/Visualización de Datos/CYCLT.xlsx')
piston_data.head()

piston_data.info()

# Get the mean from the data
piston_data_mean = (piston_data
               .agg('mean')
               )

round(piston_data_mean, 3) #Rounding function in python

# Get the variance from the data
piston_data_var = (piston_data
               .agg('var')
               )

round(piston_data_var, 3)

# Get the standard deviation from the data
piston_data_sd = (piston_data
               .agg('std')
               )

round(piston_data_sd, 3)

# Getting the quartiles
quantiles = [0.25, 0.5, 0.75]

# Calculate the quartiles
(piston_data
.agg('quantile', q = quantiles)
)

# Calculate the max and min from the data
(piston_data
.agg(['max', 'min'])
)

#### Important Graphs ####

# Histogram plot
plt.figure(figsize = (10, 4))
sns.histplot(data = piston_data, x = 'cycle_time', edgecolor = 'black', color = 'skyblue')

#Adding visual elements
plt.title('Cycle Time Histogram: Data from 50 pistons')
plt.xlabel('Cycle Time (s)')
plt.ylabel('Frequency')
plt.show()

# Adding intervals to alter its visuals
### 5 Bins ###
plt.figure(figsize = (10, 4))
sns.histplot(data = piston_data, x = 'cycle_time', edgecolor = 'blue', color = 'green', bins = 5)

#Better visuals
plt.title('Cycle Time Histogram: Data from 50 pistons')
plt.xlabel('Cycle Time (s)')
plt.ylabel('Frequency')
plt.show()

# Adding intervals to alter its visuals
### 30 Bins ###
plt.figure(figsize = (10, 4))
sns.histplot(data = piston_data, x = 'cycle_time', edgecolor = 'red', color = 'blue', bins = 30)

#Better visuals
plt.title('Cycle Time Histogram: Data from 50 pistons')
plt.xlabel('Cycle Time (s)')
plt.ylabel('Frequency')
plt.show()

# Working with Boxplots
plt.figure(figsize = (7, 7))
sns.boxplot(data = piston_data, y = 'cycle_time', color = 'skyblue')

#Better visuals
plt.title('Cycle Time Boxplot: Data from 50 pistons')
plt.xlabel('Cycle Time (s)')
plt.ylabel('Frequency')
plt.show()

# Rotating it on its x axis
plt.figure(figsize = (10, 4))
sns.boxplot(data = piston_data, x = 'cycle_time', color = 'lightgreen')

#Better visuals
plt.title('Cycle Time Boxplot: Data from 50 pistons')
plt.xlabel('Cycle Time (s)')
plt.ylabel('Frequency')
plt.show()

#### Activity ####

bolt_data = pd.read_excel('/content/drive/MyDrive/Work 2/5to Semestre/Visualización de Datos/bolts.xlsx')
bolt_data.info()

# Calculating all functions shown
bolt_data_aggs = round((bolt_data
               .agg(['mean', 'var', 'std', 'quantile', 'max', 'min'])
               ), 3)
bolt_data_aggs

# Using the both graphs to view the data
## Histogram ##
plt.figure(figsize = (10, 4))
sns.histplot(data = bolt_data, x = 'Nonconforming_Bolts', edgecolor = 'black', color = 'teal', bins = 15)
#Better visuals
plt.title('Nonconformed Bolts Produced per Shift - Histogram: Data from 45 bolts')
plt.xlabel('Nonconforming Bolts Produced')
plt.ylabel('Frequency')
plt.show()

## Boxplot ##
plt.figure(figsize = (10, 4))
sns.boxplot(data = bolt_data, x = 'Nonconforming_Bolts', color = 'lightgreen')
#Better visuals
plt.title('Nonconformed Bolts Produced per Shift - Boxplot: Data from 45 bolts')
plt.xlabel('Nonconforming Bolts Produced')
plt.ylabel('Frequency')
plt.show()

"""The graph observed above shows the somewhat horizontal distribution of nonconfromed bolts produced per shift, meaning that it has a high spread in its data but the variation stays symetrical across the graph, showing that we might need more data to conclude if there is a pattern in the production, because we cannot find a visible pattern on the production of these bolts."""